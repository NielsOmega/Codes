library(shiny)
library(shiny)
install.packages("shiny")
install.packages("shiny")
library(shiny)
install.packages(c("assertthat", "curl", "gss", "htmltools", "httpuv", "jsonlite", "R6", "Rcpp", "readr", "stringi", "stringr", "tibble", "tseries"))
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
0.1:0.01:0.2
help seq()
seq(0,1,0.1)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
f=2*input$p-1
f_interval=seq(0,2*f,0.01)
g=p*log(1+f_interval)+(1-p)*log(1-f_interval)
f=2*input$p-1
input$p=0.6
a=seq(0,1,0.1)
plot(a)
line(a)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
p=0.6
f=2*p-1
f_interval=seq(0,2*f,0.01)
g=p*log(1+f_interval)+(1-p)*log(1-f_interval)
plot(g)
"a"
'a'
ui <- fluidPage(
# Application title
titlePanel("Kelly - Optimaler Wetteinsatz (Unfaire Münze)"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("W_0",
"Vermögen:",
min = 1,
max = 100,
value = 1),
sliderInput("f_naive",
"Invesment (in %):",
min = 1,
max = 100,
value = 10),
sliderInput("p",
"Gewinnwahrscheinlichkeit (in %):",
min = 1,
max = 100,
value = 10),
sliderInput("n",
"Anzahl aufeinander folgender Spiele:",
min = 1,
max = 1000,
value = 100)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("plot_growth")
)
)
)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
n=5
p=0.8
b=rbinom(n,1,p)
b[b==0]=-1;
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
m=1
W=matrix(0,n,m)
View(W)
b=rbinom(n,1,p)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
b=t(rbinom(n,1,p))
View(b)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
b=rbinom(n,1,p)
b[b==0]=-1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
W[W<=0]=0
print(W)
b=rbinom(n,1,p)
b[b==0]=-1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
W[W<=0]=0
print(W)
b=rbinom(n,1,p)
b[b==0]=-1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
W0=1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
b=t(rbinom(n,1,p))
View(b)
b=t(t(rbinom(n,1,p)))
View(b)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
b=t(t(rbinom(n,1,p)))
b[b==0]=-1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
f=2*p-1
m=1
b=t(t(rbinom(n,1,p)))
b[b==0]=-1
W=matrix(0,n,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
W=matrix(0,n+1,m)
for (j in 1:m){
W[1,j]=W0
for (i in 1:n){
W[i+1,j]=W[i,j]*(1+b[i,j]*f)
}
}
W[W<=0]=0
print(W)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
f=2*p-1
f_interval=seq(0,2*f,2*f/50)
p=0.6
f=2*p-1
f_interval=seq(0,2*f,2*f/50)
g=p*log(1+f_interval)+(1-p)*log(1-f_interval)
f_naive=0.1
g_naive=which.min(f_naive-f_interval)
f_naive-f_interval
g_naive=which.min(abs(f_naive-f_interval)
points(f_naive,g[g_naive]*100,col="blue",pch=1)
})
g_naive=which.min(abs(f_naive-f_interval))
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
install.packages("ggplot2")
library(shiny)
library(ggplot2)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
install.packages("Cairo")
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
rgb(0, 0, 0)
c(0 102 204)./255); #blue
c(0, 102, 204)/255); #blue
c(0, 102, 204)/255); #blue
c(0, 102, 204)/255; #blue
rgb(c(0, 102, 204)/255); #blue
green2_raw=c(0, 102, 204)/255
green2=rgb(green2_raw[1],green2_raw[2],green2_raw[3]); #blue
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
install.packages("shinydashboard")
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
simulate_bernoulli(500,0.5,50)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
b = reactive({simulate_bernoulli(500,input$p/100,50)})
wealth_bernoulli(1,simulate_bernoulli(1,0.5,50,2,0.1),50,2,0.1)
simulate_bernoulli(500,0.5,2)
b=simulate_bernoulli(500,0.5,2)
View(b)
wealth_bernoulli(1,b,50,2,0.1)
W=wealth_bernoulli(1,b,50,2,0.1)
View(W)
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
boxplot(W[end,])
boxplot(W[50,])
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
4444
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/Kelly_Bernoulli')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/R')
library(readxl)
Prices <- read_excel("~/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI/Dax.xlsx",
col_names = FALSE)
View(Prices)
Prices_lag=lag(Prices)
Prices_lag=lag(Prices,1)
ret=log(Prices[2:end]-Prices[1:end-1])
View(Prices)
View(Prices)
plot(Prices)
plot(1:4978,Prices)
plot(1:4978,Prices)
Prices[1:end-1]
View(Prices)
View(Prices)
View(Prices)
Prices
Prices[1]
Prices[1,1]
prices=as.vector(Prices['X__1'])
prices[2,1]
prices[2,1]-prices[4,1]
ret=(Prices[2:end]-Prices[1:end-1])
ret=(Prices[2:end,1]-Prices[1:end-1,1])
Prices[2:end,1]
prices[2:end,1]
prices[2:5,1]
prices[2:4978,1]
A=49978
A=4978
ret=(Prices[2:A,1]-Prices[1:A-1,1])
ret=log(Prices[2:A,1]-Prices[1:A-1,1])
ret=log(Prices[2:A,1])-log(Prices[1:A-1,1])
hist(ret)
View(ret)
plot(ret)
boxplot(ret)
density(ret)
as.vector(ret)
ret=as.vector(ret)
avector <- aframe[ , "ret"]
avector <- ret[ , "X__1"]
ret=avector
density(ret)
plot(density(ret))
save(ret, file = "ret.RData")
clearPushBack()
clear
clc
load(ret.RData)
load("ret.RData")
help load
load("ret.RData")
setwd("C:\Users\N\Documents\Studium\_Codes\Finance\201701 Kelly\201707 Kelly One-dimensional GUI")
setwd("Home\Studium\_Codes\Finance\201701 Kelly\201707 Kelly One-dimensional GUI")
setwd("Home/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI")
setwd("Home/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI")
load("ret.RData")
load("~/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI/ret.RData")
shiny::runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
f_interval=seq(0,5,1/50)
f=c(f_interval, 1-f_interval)
f=rbind(f_interval, 1-f_interval)
View(f)
ret_sim_discrete=rbind(exp(ret_sim)-1,rf)
rf=0.01
n=100
repmat(rf,n,1)
zeros(n,1)
rep(rf,n,1)
rep(rf,n)
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
shiny::runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
iris
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
iris
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
load("~/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI/1.RData")
View(W_T)
shiny::runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
load("~/Studium/_Codes/Finance/201701 Kelly/201707 Kelly One-dimensional GUI/1.RData")
View(W_T)
View(W_T)
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
a=rnorm(100)
quantile(a,0.05)
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
runApp('Finance/201701 Kelly/201707 Kelly One-dimensional GUI')
shiny::runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/R')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/R')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/R')
runApp('Finance/201701 Kelly/201511 Kelly Bernoulli GUI/R')
